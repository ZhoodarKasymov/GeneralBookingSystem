@model BookingQueue.Common.Models.ViewModels.CompanyViewModel

@{
    ViewData["Title"] = Model.Id == 0 ? "Создать компанию" : "Редактировать компанию";
    Layout = "_LayoutAdmin";
}

<div>
    <h4>
        <bold>@ViewData["Title"]</bold>
    </h4>
</div>

<form asp-controller="SuperAdmin" asp-action="CreateCompany" method="post" enctype="multipart/form-data" class="row g-3 needs-validation" novalidate>
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    <hr>
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.IconPath)

    <div class="col-12 col-md-6">
        <div class="form-group">
            <label>
                <span class="d-inline fw-bold">Название компании</span>
                <div class="d-inline text-danger">*</div>
            </label>
            <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                <div class="w-100">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control custom-input-gns", required = "required", autocomplete="off" })
                    <div class="invalid-feedback">Название компании не может быть пустым</div>
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-12 col-md-6">
        <div class="form-group">
            <label>
                <span class="d-inline fw-bold">Номер телефона</span>
                <div class="d-inline text-danger">*</div>
            </label>
            <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                <div class="w-100">
                    @Html.TextBoxFor(m => m.CompanyPhone, new { @class = "form-control custom-input-gns phone-input", required = "required", autocomplete="off" })
                    <div class="invalid-feedback">Номер телефона не может быть пустым</div>
                    @Html.ValidationMessageFor(m => m.CompanyPhone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-12 col-md-6">
        <div class="form-group">
            <label>
                <span class="d-inline fw-bold">Почта</span>
                <div class="d-inline text-danger">*</div>
            </label>
            <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                <div class="w-100">
                    @Html.TextBoxFor(m => m.CompanyMail, new { @class = "form-control custom-input-gns email-input", required = "required", autocomplete="off" })
                    <div class="invalid-feedback">Почта не может быть пустым</div>
                    @Html.ValidationMessageFor(m => m.CompanyMail, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-12 col-md-6">
        <div class="form-group">
            <label>
                <span class="d-inline fw-bold">Ссылка компании</span>
                <div class="d-inline text-danger">*</div>
            </label>
            <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                <div class="w-100">
                    @Html.TextBoxFor(m => m.CompanyLink, new { @class = "form-control custom-input-gns", required = "required", autocomplete="off" })
                    <div class="invalid-feedback">Ссылка компании не может быть пустым</div>
                    @Html.ValidationMessageFor(m => m.CompanyLink, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-12 col-md-6">
        <div class="form-group">
            <label>
                <span class="d-inline fw-bold">Заголовок компании</span>
                <div class="d-inline text-danger">*</div>
            </label>
            <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                <div class="w-100">
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control custom-input-gns", required = "required", autocomplete="off" })
                    <div class="invalid-feedback">Заголовок компании не может быть пустым</div>
                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-12 col-md-6">
        <div class="form-group">
            <label>
                <span class="d-inline fw-bold">Иконка</span>
                <div class="d-inline text-danger">*</div>
            </label>
            <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                <div class="w-100">
                    <input type="file" name="iconFile" class="form-control custom-input-gns" @(Model.IconPath != null ? "" : "required") />
                    <div class="invalid-feedback">Иконка не может быть пустым</div>
                    @if (Model.IconPath != null)
                    {
                        <img src="@Url.Content(Model.IconPath)" alt="Company Icon" class="img-thumbnail mt-2" style="width: 100px; height: 100px;" />
                    }
                </div>
            </div>
        </div>
    </div>

    <div id="branchesContainer" class="col-12 mt-3">
        <h5>Филиалы</h5>
        <hr/>

        <div id="branchesList" class="mt-3">
            @for (int i = 0; i < Model.Branches.Count; i++)
            {
                <div class="row g-3 branch mt-2">
                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label>
                                <span class="d-inline fw-bold">Название филиала</span>
                                <div class="d-inline text-danger">*</div>
                            </label>
                            <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                                <div class="w-100">
                                    @Html.TextBoxFor(m => m.Branches[i].Name, new { @class = "form-control custom-input-gns branch-name", required="required", autocomplete="off" })
                                    <div class="invalid-feedback">Название филиала не может быть пустым</div>
                                    @Html.ValidationMessageFor(m => m.Branches[i].Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label>
                                <span class="d-inline fw-bold">Адрес филиала</span>
                                <div class="d-inline text-danger">*</div>
                            </label>
                            <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                                <div class="w-100">
                                    @Html.TextBoxFor(m => m.Branches[i].Address, new { @class = "form-control custom-input-gns", required="required", autocomplete="off" })
                                    <div class="invalid-feedback">Адрес филиала не может быть пустым</div>
                                    @Html.ValidationMessageFor(m => m.Branches[i].Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label>
                                <span class="d-inline fw-bold">Адрес подключения к БД</span>
                                <div class="d-inline text-danger">*</div>
                            </label>
                            <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                                <div class="w-100">
                                    @Html.TextBoxFor(m => m.Branches[i].Connection, new { @class = "form-control custom-input-gns branch-connection", required="required", autocomplete="off" })
                                    <div class="invalid-feedback">Адрес подключения к БД не может быть пустым</div>
                                    @Html.ValidationMessageFor(m => m.Branches[i].Connection, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <label>
                                <span class="d-inline fw-bold">В процессе (Если ещё не доступна база)</span>
                            </label>
                            <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                                <div class="w-100">
                                    @Html.CheckBoxFor(m => m.Branches[i].IsProgress, new { value=true, @class = "form-check-input branch-progress" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-12 col-md-6">
                        <div class="form-group">
                            <button type="button" class="btn btn-danger remove-branch">Удалить филиал</button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="col-12 mt-3">
            <button type="button" id="addBranch" class="btn btn-primary">Добавить филиал</button>
        </div>
    </div>

    <div class="col-12 mt-3">
        <div class="row">
            <div class="col-12 col-md-4 mt-3">
                <button type="submit" class="btn custom_button_gns">Сохранить</button>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            let branchIndex = $('#branchesList .branch').length;
            const branchTemplateHtml = `
                    <div class="row g-3 branch">
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label>
                                    <span class="d-inline fw-bold">Название филиала</span>
                                    <div class="d-inline text-danger">*</div>
                                </label>
                                <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                                    <div class="w-100">
                                        <input type="text" class="form-control custom-input-gns branch-name" required="required" autocomplete="off" />
                                        <div class="invalid-feedback">Название филиала не может быть пустым</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label>
                                    <span class="d-inline fw-bold">Адрес филиала</span>
                                    <div class="d-inline text-danger">*</div>
                                </label>
                                <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                                    <div class="w-100">
                                        <input type="text" class="form-control custom-input-gns branch-address" required="required" autocomplete="off" />
                                        <div class="invalid-feedback">Адрес филиала не может быть пустым</div>
                                    </div>
                                </div>
                            </div>
                        </div>
            
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label>
                                    <span class="d-inline fw-bold">Адрес подключения к БД</span>
                                    <div class="d-inline text-danger">*</div>
                                </label>
                                <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                                    <div class="w-100">
                                        <input type="text" class="form-control custom-input-gns branch-connection" required="required" autocomplete="off" />
                                        <div class="invalid-feedback">Адрес подключения к БД не может быть пустым</div>
                                    </div>
                                </div>
                            </div>
                        </div>
            
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <label>
                                    <span class="d-inline fw-bold">В процессе (Если ещё не доступна база)</span>
                                </label>
                                <div class="bs-custom-control w-100 d-flex flex-wrap align-items-center">
                                    <div class="w-100">
                                        <input type="checkbox" value="true" class="form-check-input branch-progress" />
                                    </div>
                                </div>
                            </div>
                        </div>
            
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                <button type="button" class="btn btn-danger remove-branch">Удалить филиал</button>
                            </div>
                        </div>
                    </div>
                `;

            function updateBranchIndices() {
                $('#branchesList .branch').each(function (index) {
                    $(this).find('.branch-name').attr('name', `Branches[${index}].Name`);
                    $(this).find('.branch-connection').attr('name', `Branches[${index}].Connection`);
                    $(this).find('.branch-progress').attr('name', `Branches[${index}].IsProgress`);
                    $(this).find('.branch-address').attr('name', `Branches[${index}].IsProgress`);
                });
            }

            $('#addBranch').on('click', function () {
                const branchTemplate = $(branchTemplateHtml).addClass('mt-3');
                branchTemplate.find('.branch-name').attr('name', `Branches[${branchIndex}].Name`);
                branchTemplate.find('.branch-connection').attr('name', `Branches[${branchIndex}].Connection`);
                branchTemplate.find('.branch-progress').attr('name', `Branches[${branchIndex}].IsProgress`);
                branchTemplate.find('.branch-address').attr('name', `Branches[${branchIndex}].Address`);
                $('#branchesList').append(branchTemplate);
                branchIndex++;
            });

            $(document).on('click', '.remove-branch', function () {
                $(this).closest('.branch').remove();
                updateBranchIndices();
            });
        });
    </script>
}
